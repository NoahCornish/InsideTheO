name: Get OHL Stats

on:
  schedule:
    - cron: "30 9 * * *"  # 4:30 AM EST (9:30 AM UTC) # should be updated by 0500 EST
    - cron: "30 3 * * *"  # 10:30 PM EST (3:30 AM UTC) # should be updated by 2300 EST
  workflow_dispatch:

jobs:
  fetch_stats:
    runs-on: ubuntu-latest

    steps:
      - name: Log Start Time
        run: |
          echo "Workflow started at: $(date -u)" >> $GITHUB_STEP_SUMMARY

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12.1

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Fetch Stats
        run: |
          start_time=$(date +%s)
          python get_ohl_stats.py
          end_time=$(date +%s)
          duration=$((end_time - start_time))
          echo "Workflow runtime: $((duration / 60)) minutes and $((duration % 60)) seconds." >> $GITHUB_STEP_SUMMARY

      - name: Verify Folder Exists
        run: |
          if [ ! -d "OHL_STATS" ]; then
            echo "Error: Output folder not generated!";
            exit 1;
          fi

      - name: Check for Changes
        id: check_changes
        run: |
          if git diff --quiet; then
            echo "changes_detected=false" >> $GITHUB_ENV
            echo "NO CHANGES IN OHL STATS. Workflow exiting successfully." >> $GITHUB_STEP_SUMMARY
          else
            echo "changes_detected=true" >> $GITHUB_ENV
            echo "CHANGES DETECTED IN OHL STATS. Preparing to commit these..." >> $GITHUB_STEP_SUMMARY
            git diff --stat >> $GITHUB_STEP_SUMMARY
          fi

      - name: Commit and Push Changes
        if: env.changes_detected == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add "OHL_STATS/*"
          git commit -m "Automated update: OHL Stats CSVs"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

